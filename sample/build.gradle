apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId globalConfiguration.getAt("androidApplicationId")
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }

    buildTypes {
        debug {
            zipAlignEnabled false
            minifyEnabled false
            shrinkResources false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    dexcount {
        format = "list"
        includeClasses = false
        includeClassCount = false
        includeFieldCount = true
        includeTotalMethodCount = false
        orderByMethodCount = false
        verbose = false
        maxTreeDepth = Integer.MAX_VALUE
        teamCityIntegration = false
        teamCitySlug = null
        runOnEachPackage = true
        maxMethodCount = 64000
    }
}

dependencies {
    //Libraries
    implementation project(':library')
    def sampleDependencies = rootProject.ext.sampleDependencies
    implementation sampleDependencies.annotationsVersion
    implementation sampleDependencies.supportCompat
    implementation sampleDependencies.supportCoreUtils
    implementation sampleDependencies.supportCoreUi
    implementation sampleDependencies.supportMediaCompat
    implementation sampleDependencies.supportFragment
    implementation sampleDependencies.supportV7
    implementation sampleDependencies.picasso
}
